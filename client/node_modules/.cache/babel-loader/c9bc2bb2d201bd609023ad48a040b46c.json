{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError';\nexport function singleFieldOnlyMessage(name) {\n  return name ? \"Subscription \\\"\".concat(name, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.';\n}\n/**\r\n * Subscriptions must only include one field.\r\n *\r\n * A GraphQL subscription is valid only if it contains a single root field.\r\n */\n\nexport function SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Asa/Desktop/repos/shop-shop/client/node_modules/graphql/validation/rules/SingleFieldSubscriptions.mjs"],"names":["GraphQLError","singleFieldOnlyMessage","name","concat","SingleFieldSubscriptions","context","OperationDefinition","node","operation","selectionSet","selections","length","reportError","value","slice"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;AAC3C,SAAOA,IAAI,GAAG,kBAAkBC,MAAlB,CAAyBD,IAAzB,EAA+B,0CAA/B,CAAH,GAAgF,8DAA3F;AACD;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,wBAAT,CAAkCC,OAAlC,EAA2C;AAChD,SAAO;AACLC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;AACtD,UAAIA,IAAI,CAACC,SAAL,KAAmB,cAAvB,EAAuC;AACrC,YAAID,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;AAC7CN,UAAAA,OAAO,CAACO,WAAR,CAAoB,IAAIZ,YAAJ,CAAiBC,sBAAsB,CAACM,IAAI,CAACL,IAAL,IAAaK,IAAI,CAACL,IAAL,CAAUW,KAAxB,CAAvC,EAAuEN,IAAI,CAACE,YAAL,CAAkBC,UAAlB,CAA6BI,KAA7B,CAAmC,CAAnC,CAAvE,CAApB;AACD;AACF;AACF;AAPI,GAAP;AASD","sourcesContent":["import { GraphQLError } from '../../error/GraphQLError';\r\nexport function singleFieldOnlyMessage(name) {\r\n  return name ? \"Subscription \\\"\".concat(name, \"\\\" must select only one top level field.\") : 'Anonymous Subscription must select only one top level field.';\r\n}\r\n/**\r\n * Subscriptions must only include one field.\r\n *\r\n * A GraphQL subscription is valid only if it contains a single root field.\r\n */\r\n\r\nexport function SingleFieldSubscriptions(context) {\r\n  return {\r\n    OperationDefinition: function OperationDefinition(node) {\r\n      if (node.operation === 'subscription') {\r\n        if (node.selectionSet.selections.length !== 1) {\r\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}